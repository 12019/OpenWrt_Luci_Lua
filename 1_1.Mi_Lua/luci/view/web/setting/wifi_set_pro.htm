<%
--[[
	Info	wifi 高级设置
]]--
local LuciJson = require("luci.json")
local ver = require("xiaoqiang.XQVersion").webVersion
local wifiUtil = require("xiaoqiang.util.XQWifiUtil")
local pddk24 = LuciJson.encode(wifiUtil.getDefaultWifiChannels(1));
local pddk50 = LuciJson.encode(wifiUtil.getDefaultWifiChannels(2));
local guestwifi1 = LuciJson.encode(wifiUtil.getGuestWifi(1))
%>
<%include('web/inc/head')%>
<title>小米路由器</title>
<link rel="stylesheet" href="<%=resource%>/web/css/page.set.default.css?v=<%=ver%>" type="text/css"/>
</head>
<body>
<div class="mod-setting-panel">
	<div class="hd">
		<h3>无线信道与强度</h3>
	</div>
	<div class="bd">
		<div class="mod-set-wifipro" id="wifipro24">
			<form name="wifiSetPro24" id="wifiSetPro24" class="form form-horizontal form-wifi-proset" action="<%=luci.dispatcher.build_url("api", "xqnetwork","set_wifi")%>" method="post">
				<input type="hidden" name="wifiIndex" value="1">
				<div class="item">
					<label class="k">2.4G网络：</label>
					<span class="v">
						<span class="ssid"></span>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-set">
					<label class="k">无线信道：</label>
					<span class="v">
					<select name="channel" class="beautify">
						<option value="0">自动</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
						<option value="7">7</option>
						<option value="8">8</option>
						<option value="9">9</option>
						<option value="10">10</option>
						<option value="11">11</option>
						<option value="12">12</option>
						<option value="13">13</option>
					</select>
					</span>
				</div>
				<div class="item item-set item-set-bandwidth" style="display:none;">
					<label class="k">频段带宽：</label>
					<span class="v">
						<select name="bandwidth" class="beautify">
							<option value="0">自动</option>
						</select>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-set">
					<label class="k">信号强度：</label>
					<span class="v">
					<select name="txpwr" class="beautify">
						<option value="max">穿墙</option>
						<option value="mid">标准</option>
						<option value="min">节能</option>
					</select>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-control item-set">
					<button type="submit" class="btn btn-primary"><span>保存</span></button>
				</div>
			</form>
		</div>

		<div class="hr"></div>

		<div class="mod-set-wifipro" id="wifipro50">
			<form name="wifiSetPro50" id="wifiSetPro50" class="form form-horizontal form-wifi-proset" action="<%=luci.dispatcher.build_url("api", "xqnetwork","set_wifi")%>" method="post">
				<input type="hidden" name="wifiIndex" value="2">
				<div class="item">
					<label class="k">5G网络：</label>
					<span class="v">
						<span class="ssid"></span>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-set">
					<label class="k">无线信道：</label>
					<span class="v">
					<select name="channel" class="beautify">
						<option value="0">自动</option>
						<option value="36">36</option>
						<option value="40">40</option>
						<option value="44">44</option>
						<option value="48">48</option>
						<option value="52">52</option>
						<option value="56">56</option>
						<option value="60">60</option>
						<option value="64">64</option>
						<option value="149">149</option>
						<option value="153">153</option>
						<option value="157">157</option>
						<option value="161">161</option>
						<option value="165">165</option>
					</select>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-set item-set-bandwidth" style="display:none;">
					<label class="k">频段带宽：</label>
					<span class="v">
						<select name="bandwidth" class="beautify">
							<option value="0">自动</option>
						</select>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-set">
					<label class="k">信号强度：</label>
					<span class="v">
					<select name="txpwr" class="beautify">
						<option value="max">穿墙</option>
						<option value="mid">标准</option>
						<option value="min">节能</option>
					</select>
					</span>
					<em class="t"></em>
				</div>
				<div class="item item-control item-rsp-err item-set" style="display:none"><em class="t"></em></div>
				<div class="item item-control item-set">
					<button type="submit" class="btn btn-primary"><span>保存</span></button>
				</div>
			</form>
		</div>
	</div>
</div>
<%include('web/inc/g.js.base')%>
<script>
$(global_event).on('wifi:init', function(evt, data){
	$('[name=channel]').on('change', function(e){
		var channelVal = this.value,
			that = this,
			root = $(that).parents('form'),
			wifiIndex = root.find('[name=wifiIndex]').val(),
			elsetbandwidth = $('.item-set-bandwidth', root),
			elbandwidth = $('[name=bandwidth]', root),
			index = parseInt(wifiIndex, 10) - 1;
		console.log(root, wifiIndex);
		if (channelVal == 0) {
			elsetbandwidth.hide();
			return;
		}
		var pddk24 = $.parseJSON('<%=pddk24%>');
		var pddk50 = $.parseJSON('<%=pddk50%>');
		var pddk = wifiIndex == '1' ? pddk24 : pddk50;
		var item = '<option value="0">自动</option>';
		var autoVal;
		var autoText;
		for (i in pddk[channelVal]) {
			item += '<option value="'+i+'">'+ i +'M</option>';
			autoVal = i;
			autoText = i + 'M';
		}
		elbandwidth.html(item).val(autoVal);
		elsetbandwidth.find('.dummy').prop('readonly', false).val(autoText).prop('readonly', true);
		elsetbandwidth.show();

		var channelIsBad = /36|40|44|48|52|56|60|64/.test(channelVal),
			oldChannel = global_event[wifiIndex].oldVal.channel,
			oldBandwidth = global_event[wifiIndex].oldVal.bandwidth;

		if (channelIsBad && channelVal != oldChannel) {
			window.top.art.dialog({
				title: '信道选择',
				content: '你手工选择的当前信道有可能造成部分机型较旧的设备无法连接，确认修改？',
				okValue: '确认',
				cancelValue: '取消',
				ok: function(){
					this.close();
				},
				cancel: function(){
					$(that).val(oldChannel);
					var elbdwt = elbandwidth;
					var elchannelindex = that.selectedIndex;
					$(that).next('.dummy').val(that.options[elchannelindex].text);

					elbdwt.val(oldBandwidth);
					var elbdwtindex = elbdwt[0].selectedIndex;
					elbdwt.next('.dummy').val(elbdwt[0].options[elbdwtindex].text);
					if(oldChannel == 0){
						elsetbandwidth.hide();
					}
				}
			}).lock();
		}
	});
});

$(global_event).on('wifi:statusGet', function(evt, data){
	var wifiIndex = data.wifiIndex,
		request_data = {"wifiIndex": wifiIndex},
		$root = $(['#wifipro24', '#wifipro50'][wifiIndex - 1]),
		root = $root[0];
	global_event.guestwifi = $.parseJSON('<%=guestwifi1%>');
	$.getJSON('<%=luci.dispatcher.build_url("api", "xqnetwork","wifi_detail")%>', request_data ,function(rsp) {
		if (rsp.code != 0) {
			return;
		}
		var info = rsp.info;
		var ssid = info.ssid;
		var status = info.status;
		var password = info.password;
		var cchannel = info.channel;
		var channel = info.channelInfo.channel;
		var encryption = info.encryption;
		var bandwidth = info.channelInfo.bandwidth;
		var bandwidthlist = info.channelInfo.bandList;
		var txpwr = info.txpwr;

		global_event[wifiIndex] = {};
		global_event[wifiIndex].ssid = ssid;
		global_event[wifiIndex].pwd = password;
		global_event[wifiIndex].encryption = encryption;

		if ( status == '0' ) {
			$('.ssid', root).html('未开启');
			$('.item-set', root).hide();
			return;
		} else {
			if ( wifiIndex == 1 && global_event.guestwifi ) {
				ssid = ssid + ' / ' + global_event.guestwifi.ssid;
			}
			$('.ssid', root).html( ssid );
		}

		$('[name=channel]', root).val(cchannel);
		if (cchannel != 0) {
			var bandoption = '<option value="0">自动</option>';
			for(var i = 0, len = bandwidthlist.length; i < len; i ++){
				bandoption += '<option value="'+bandwidthlist[i]+'">'+bandwidthlist[i]+'M</option>';
			}
			$('[name=bandwidth]', root).html(bandoption).val(bandwidth);
			if ( bandwidth != 0 ) {
				bandwidth = bandwidth +'M';
			} else {
				bandwidth = '自动';
			}
			$('.item-set-bandwidth', root).find('.dummy').prop('readonly', false).val(bandwidth).prop('readonly', true);
			$('.item-set-bandwidth', root).show();
		}

		window.setTimeout(function(){
			var elchannel = $('[name=channel]' ,root)[0];
			var elchannelindex = elchannel.selectedIndex;
			$(elchannel).next('.dummy').val(elchannel.options[elchannelindex].text);
		}, 50);

		$('[name=txpwr]', root).val(txpwr);
		window.setTimeout(function(){
			var eltxpwr = $('[name=txpwr]' ,root)[0];
			var eltxpwrindex = eltxpwr.selectedIndex;
			$(eltxpwr).next('.dummy').val(eltxpwr.options[eltxpwrindex].text);
		}, 50);

		global_event[wifiIndex].oldVal = {
			'channel' : channel,
			'bandwidth': bandwidth,
			'txpwr': txpwr
		}
	});
});

$(global_event).on('wifi:bindEvent', function(evt, data){

	function isChange(name){
		var changed = false;
		var formEls = document.forms[name].elements;
		var wifiIndex = formEls['wifiIndex'].value;
		var formVals = {};
		var oldVal = global_event[wifiIndex].oldVal;
		for (var i = 0; i < formEls.length; i++) {
			var item = formEls[i];
			var itemName = item.name;
			var itemVal = item.value;
			if ( itemName in oldVal) {
				formVals[itemName] = itemVal;
			}
		}

		console.log(formVals, oldVal);
		for (var i in oldVal){
			console.log(i);
			if (oldVal[i] != formVals[i]) {
				console.log(i,formVals[i], oldVal[i],'changed');
				if (i == 'bandwidth' && formVals['channel'] == '0' && formVals['bandwidth'] == '0') {
					console.log('auto');
					changed = false;
				}else{
					changed = true;
					return changed;
				}
			}
		}
		return changed;
	}

	$('.form-wifi-proset').on('submit', function(e){
		e.preventDefault();
		var root = this;
		var frm = this.name;
		var changed = isChange(frm);
		var wifiIndex = $('[name=wifiIndex]', root).val();
		if (!changed) {
			$.lightalert().setContent('你都没改变，提交什么啊？').show();
			return false;
		}
		var request_data = {
			wifiIndex: wifiIndex,
			channel: $('[name=channel]', root).val(),
			bandwidth: $('[name=bandwidth]', root).val(),
			txpwr: $('[name=txpwr]', root).val(),
			ssid: global_event[wifiIndex].ssid,
			pwd: global_event[wifiIndex].pwd,
			encryption: global_event[wifiIndex].encryption
		};
		global_event.request_data = request_data;
		$(global_event).trigger('wifi:modify', {root: root});
		return false;
	});
});

$(global_event).on('wifi:modify', function(evt, data){
	var root = data.root;

	function wait(){
		$(".btn", root).attr("disabled",true).find('span').text('处理中...');
		$("input,select", root).attr("readonly",true);
	}

	function done(){
		$(".btn", root).attr("disabled",false).find('span').text('保存');;
		$("input,select", root).attr("readonly",false);
	}
	function modify (){
		wait();
		var request_data =  global_event.request_data;
		console.log(request_data);
		$.ajax({
			url: '<%=luci.dispatcher.build_url("api", "xqnetwork","set_wifi")%>',
			dataType: 'json',
			type: "POST",
			data: request_data,
			success: function(rsp,item) {
				var msg = rsp.msg = StringH.encode4Html(rsp.msg);
				if(rsp.code == 0){
					window.top.art.dialog({
						title : false,
						cancel: false,
						content : '设置已经生效，等待15秒后WiFi重启。'
					}).lock().time(15 * 1000);
					setTimeout(function(){
						window.top.location.reload(1);
					}, 15 * 1000);
				} else {
					$('.item-rsp-err', root).show().addClass('item-err');
					$('.item-rsp-err', root).find('.t').html(rsp.msg).show();
				}
				done();
			},
			error: function() {
				done();
			}
		});
	}

	$(global_event).trigger('wifi:confirm',{
		ok : function(){
			modify ();
		}
	});

});


$(global_event).on('wifi:confirm', function(evt, data){
	var ok = data.ok || function(){},
		cancel = data.cancel || function(){};

	window.top.art.dialog({
		id : "confirm",
		width : 300,
		title : "操作确认",
		content : '是否确认对WiFi进行修改？如果点击确认，WiFi将会重启，网络需要15秒钟才能恢复正常。',
		okValue: '确认',
		ok: function(){
			ok();
			this.close();
			console.log('confirm ok');
		},
		cancelValue: '取消',
		cancel: function () {
			console.log(cancel);
			cancel();
			this.close();
			console.log('confirm cancel');
		}
	}).lock();
});

$(function(){
	$(global_event).trigger('wifi:init');
	$(global_event).trigger('wifi:statusGet', {wifiIndex: 1});
	$(global_event).trigger('wifi:statusGet', {wifiIndex: 2});
	$(global_event).trigger('wifi:bindEvent');
});


// 信号强度设置
$.confirm = function(ok, cancel){
	window.top.art.dialog({
		id : "confirm",
		width : 300,
		title : "操作确认",
		content : '是否确认对WiFi进行修改？如果点击确认，WiFi将会重启，网络需要10秒钟才能恢复正常。',
		okValue: '确认',
		ok: function(){
			ok();
		},
		cancelValue: '取消',
		cancel: function () {
			cancel();
		}
	}).lock();
};
</script>
</body>
</html>
